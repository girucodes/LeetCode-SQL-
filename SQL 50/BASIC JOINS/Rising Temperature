# SQL (Basic)
# BASIC JOINS
# Difficulty : Easy

# 4. 
# 197. Rising Temperature 

"""
Table: Weather

+---------------+---------+
| Column Name   | Type    |
+---------------+---------+
| id            | int     |
| recordDate    | date    |
| temperature   | int     |
+---------------+---------+
id is the column with unique values for this table.
This table contains information about the temperature on a certain day.
 

Write a solution to find all dates' Id with higher temperatures compared to its previous dates (yesterday).

Return the result table in any order.

The result format is in the following example.

 

Example 1:

Input: 
Weather table:
+----+------------+-------------+
| id | recordDate | temperature |
+----+------------+-------------+
| 1  | 2015-01-01 | 10          |
| 2  | 2015-01-02 | 25          |
| 3  | 2015-01-03 | 20          |
| 4  | 2015-01-04 | 30          |
+----+------------+-------------+
Output: 
+----+
| id |
+----+
| 2  |
| 4  |
+----+
Explanation: 
In 2015-01-02, the temperature was higher than the previous day (10 -> 25).
In 2015-01-04, the temperature was higher than the previous day (20 -> 30).
"""

"""
    pseudocode
WE want to those ID whose temp is higher than prev day.
Now there is only 1 table so we will use SELF JOIN 
for diff betn 2 dates we will use DATEDIFF() => returns diff betn 2 dates 
'''

# SOLUTION
SELECT W1.id
FROM Weather AS W1 , Weather AS W2
WHERE DATEDIFF(W1.recordDate, W2.recordDate) = 1 AND W1.temperature > W2.temperature ; 

# SQL ORDER OF EXECUTION
1. FROM/JOIN table
2. WHERE condition 
3. SELECT 
