# SQL (Basic)
# SELECT 
# Difficulty : Easy

# 584. Find Customer Referee

'''
Table: Customer

+-------------+---------+
| Column Name | Type    |
+-------------+---------+
| id          | int     |
| name        | varchar |
| referee_id  | int     |
+-------------+---------+
In SQL, id is the primary key column for this table.
Each row of this table indicates the id of a customer, their name, and the id of the customer who referred them.
 

Find the names of the customer that are not referred by the customer with id = 2.

Return the result table in any order.

The result format is in the following example.
'''
 
'''
Example 1:

Input: 
Customer table:
+----+------+------------+
| id | name | referee_id |
+----+------+------------+
| 1  | Will | null       |
| 2  | Jane | null       |
| 3  | Alex | 2          |
| 4  | Bill | null       |
| 5  | Zack | 1          |
| 6  | Mark | 2          |
+----+------+------------+
Output: 
+------+
| name |
+------+
| Will |
| Jane |
| Bill |
| Zack |
+------+
'''

'''
    pseudocode 
We have to find only those customer names who are not referred by referee_id = 2. 
Be aware of NULL values 
Single field SELECT name. 
We have to filter rows based on either or condition . 
=> referee_id != 2 OR referee_id IS NULL
'''

# SOLUTION 
SELECT name 
FROM Customer 
WHERE referee_id != 2 OR referee_id IS NULL ; 

# using COALESCE() => returns first non null values from a list 
# In this function we can pass more than 2 values just like this we have IFNULL() but in that we can pass only 2 values. 
SELECT name
FROM Customer
WHERE COALESCE(referee_id,0) <> 2 ; # What are we doing here ?
# With help of COALESCE() we will get to know about null values and we will put zero there. 

